import requests
from pprint import pprint
import datetime
from config import open_weather_token

def get_weather(city, open_weather_token):

    code_to_smile={
        "Clear":"Ясно \U00002600",
        "Clouds":"Облачно \U00002601",
        "Rain":"Дождь \U00002614",
        "Drizzle":"Моросящий дождь \U00002614",
        "Thunderstorm":"Гроза \U000026A1",
        "Snow":"Снег \U0001F328",
        "Mist":"Туман \U0001F32B"



    }


    try:
        r=requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric"
        )
        data=r.json()
        pprint(data)

        cityr=data["name"]
        feels_like=data["main"]["feels_like"]
        temperature=data["main"]["temp"]
        temp_max=data["main"]["temp_max"]
        temp_min=data["main"]["temp_min"]
        weather=data["weather"][0]["main"]

        if weather in code_to_smile:
            wd=code_to_smile[weather]
        else:
            wd="Посмотри в окно, не пойму, что там за погода!"



        wind_speed=data["wind"]["speed"]
        sunrise=datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset=datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        print (f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
                f"Погода в городе: {city}\n Температура: {temperature} C {wd}\n"
                f"Ощущается как:{feels_like}\n"
                f"Максимальная температура:{temp_max}\n"
                f"Минимальная температура:{temp_min}\n"
                f"Ветер{wind_speed}м/с\n"
                f"Рассвет:{sunrise}\n"
                f"Закат:{sunset}\n"
                f"Улыбнись!"
        )



    except Exception as ex:
        print(ex)
        print("Проверьте название города")

def main():
    city=input("Введите город: ")
    get_weather(city, open_weather_token)

if __name__=="__main__":
    main()
